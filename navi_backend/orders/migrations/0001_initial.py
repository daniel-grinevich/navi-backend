# Generated by Django 5.1.4 on 2025-03-10 19:45

import django.core.validators
import django.db.models.deletion
import imagekit.models.fields
import navi_backend.core.validators
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomizationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_required', models.BooleanField(default=False, verbose_name='Required')),
                ('category', models.ManyToManyField(to='orders.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customization Group',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Customization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of customization in dollars (between $99999-$0.01)', max_digits=8, validators=[django.core.validators.MaxValueValidator(Decimal('99999.990000000005238689482212066650390625')), django.core.validators.MinValueValidator(Decimal('0.01000000000000000020816681711721685132943093776702880859375'))], verbose_name='Price')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.customizationgroup')),
            ],
            options={
                'verbose_name': 'Customization',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('model_number', models.CharField(max_length=100)),
                ('maintenance_frequency', models.IntegerField(help_text='Required Maintenance Frequency in Days')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EspressoMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('last_maintenance_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('machine_type', models.ForeignKey(blank=True, help_text='Espresso Machine type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='espresso_machine', to='orders.machinetype', verbose_name='Machine Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of option in dollars (between $99999-$0.01)', max_digits=8, validators=[django.core.validators.MaxValueValidator(Decimal('99999.990000000005238689482212066650390625')), django.core.validators.MinValueValidator(Decimal('0.01000000000000000020816681711721685132943093776702880859375'))], verbose_name='Price')),
                ('description', models.CharField(help_text='Short description of menuitem', max_length=100, verbose_name='Description')),
                ('body', models.TextField(help_text='Detailed menuitem description', verbose_name='Body')),
                ('view_count', models.PositiveIntegerField(default=0, editable=False, help_text='View count for product', verbose_name='View count')),
                ('selected_count', models.PositiveIntegerField(default=0, editable=False, help_text='Count of how many times this menu item was chosen', verbose_name='Selected count')),
                ('is_featured', models.BooleanField(db_index=True, default=False, verbose_name='featured')),
                ('image', imagekit.models.fields.ProcessedImageField(help_text='Product image (max 5MB, JPEG/PNG)', upload_to='product_images/%Y/%m/', validators=[navi_backend.core.validators.validate_image_size, navi_backend.core.validators.validate_image_extension], verbose_name='Image')),
                ('version', models.PositiveIntegerField(default=1, editable=False, help_text='Internal version tracking', verbose_name='Version')),
                ('category', models.ForeignKey(blank=True, help_text='Category this menu item belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items', to='orders.category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MenuItem',
                'verbose_name_plural': 'MenuItems',
                'ordering': ['name'],
                'permissions': [('can_change_status', 'Can change menuitem status'), ('can_feature_product', 'Can mark menuitem as featured'), ('can_view_deleted', 'Can view deleted menuitems')],
            },
        ),
        migrations.AddField(
            model_name='machinetype',
            name='supported_drinks',
            field=models.ManyToManyField(blank=True, to='orders.menuitem'),
        ),
        migrations.CreateModel(
            name='NaviPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('espresso_machine', models.ForeignKey(blank=True, help_text='Espresso Machine attached to this NaviPort', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='navi_port', to='orders.espressomachine', verbose_name='Espresso Machine')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of order in dollars (between $99999-$0.01)', max_digits=8, validators=[django.core.validators.MaxValueValidator(Decimal('99999.990000000005238689482212066650390625')), django.core.validators.MinValueValidator(Decimal('0.01000000000000000020816681711721685132943093776702880859375'))], verbose_name='Price')),
                ('status', models.CharField(choices=[('O', 'Ordered'), ('S', 'Sent'), ('D', 'Completed'), ('C', 'Cancelled')], db_index=True, default='O', help_text='Order status', max_length=1, verbose_name='Status')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('navi_port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.naviport')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit in dollars (between $99999-$0.01)', max_digits=8, validators=[django.core.validators.MaxValueValidator(Decimal('99999.990000000005238689482212066650390625')), django.core.validators.MinValueValidator(Decimal('0.01000000000000000020816681711721685132943093776702880859375'))], verbose_name='Unit Price')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('menu_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.menuitem')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit in dollars (between $99999-$0.01)', max_digits=8, validators=[django.core.validators.MaxValueValidator(Decimal('99999.990000000005238689482212066650390625')), django.core.validators.MinValueValidator(Decimal('0.01000000000000000020816681711721685132943093776702880859375'))], verbose_name='Unit Price')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.customization')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.orderitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='payment_type',
            field=models.ForeignKey(blank=True, help_text='Payment method used for this order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='orders.paymenttype', verbose_name='Payment Type'),
        ),
        migrations.CreateModel(
            name='RasberryPi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Unique name', max_length=200, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of name', max_length=200, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Draft'), ('R', 'Archived')], db_index=True, default='A', help_text='availability status', max_length=1, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='last modified IP')),
                ('last_modified_user_agent', models.CharField(editable=False, max_length=200, null=True, verbose_name='last modified user agent')),
                ('mac_address', models.CharField(max_length=100, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('is_connected', models.BooleanField(default=False)),
                ('firmware_version', models.CharField(blank=True, max_length=50)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='naviport',
            name='rasberry_pi',
            field=models.ForeignKey(blank=True, help_text='Rasberry Pi attached to this NaviPort', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='navi_port', to='orders.rasberrypi', verbose_name='Rasberry Pi'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['name'], name='orders_menu_name_74ab71_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['price'], name='orders_menu_price_865d3b_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['status'], name='orders_menu_status_67d11d_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['created_at'], name='orders_menu_created_36dc22_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['-view_count'], name='orders_menu_view_co_6af855_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['-selected_count'], name='orders_menu_selecte_503963_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['is_deleted'], name='orders_menu_is_dele_3f870a_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['is_featured', 'status'], name='orders_menu_is_feat_7a6c34_idx'),
        ),
    ]
